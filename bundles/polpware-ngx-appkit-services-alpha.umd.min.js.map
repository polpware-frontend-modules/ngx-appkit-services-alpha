{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@polpware/ngx-appkit-services-alpha/lib/services/alert.service.ts","ng://@polpware/ngx-appkit-services-alpha/lib/services/configuration.service.ts","ng://@polpware/ngx-appkit-services-alpha/lib/services/app-translation.service.ts","ng://@polpware/ngx-appkit-services-alpha/lib/services/local-store-manager.service.ts","ng://@polpware/ngx-appkit-services-alpha/lib/services/theme-manager.ts","ng://@polpware/ngx-appkit-services-alpha/lib/ngx-appkit-services-alpha.module.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","AlertService","this","messages","Subject","dialogs","prototype","showDialog","message","type","okCallback","cancelCallback","okLabel","cancelLabel","defaultValue","DialogType","alert","showMessage","data","separatorOrDetail","severity","MessageSeverity","default","HttpResponseBase","Utilities","getHttpResponseMessages","captionAndMessageSeparator","Array","data_1","data_1_1","msgObject","splitInTwo","showMessageHelper","firstPart","secondPart","showStickyMessage","error","onRemove","data_2","data_2_1","msg","safeStringify","info","logInfo","success","logMessage","logError","warn","logWarning","wait","logTrace","summary","detail","isSticky","alertCommand","operation","resetStickyMessage","startLoadingMessage","caption","_this","clearTimeout","loadingMessageTimeoutId","setTimeout","stopLoadingMessage","logDebug","console","debug","log","trace","getDialogEvent","asObservable","getMessageEvent","factory","ɵfac","ConfigurationService","localStoreManagerProvider","translationServiceProvider","themeManagerProvider","baseUrl","environment","tokenUrl","loginUrl","fallbackBaseUrl","_language","_homeUrl","_themeId","_showDashboardStatistics","_showDashboardNotifications","_showDashboardTodo","_showDashboardBanner","onConfigurationImported","configurationImported$","localStorage","get","translationService","themeManager","loadLocalChanges","Object","defineProperty","ConfigurationServiceConstants","defaultLanguage","saveToLocalStore","DBkeys","LANGUAGE","changeLanguage","defaultThemeId","THEME_ID","installTheme","getThemeByID","defaultHomeUrl","HOME_URL","defaultShowDashboardStatistics","SHOW_DASHBOARD_STATISTICS","defaultShowDashboardNotifications","SHOW_DASHBOARD_NOTIFICATIONS","defaultShowDashboardTodo","SHOW_DASHBOARD_TODO","defaultShowDashboardBanner","SHOW_DASHBOARD_BANNER","exists","getDataObject","resetLanguage","resetTheme","key","savePermanentData","import","jsonValue","clearLocalChanges","importValue","JsonTryParse","language","themeId","homeUrl","showDashboardStatistics","showDashboardNotifications","showDashboardTodo","showDashboardBanner","export","changesOnly","exportValue","JSON","stringify","deleteData","useBrowserLanguage","useDefaultLangage","core","ɵɵinject","ngxAppkitContractsAlpha","LocalStoreManagerServiceAbstractProvider","TranslationServiceAbstractProvider","ThemeManagerAbstractProvider","AppTranslationService","translate","onLanguageChanged","languageChanged$","addLanguages","setDefaultLanguage","lang","addLangs","setDefaultLang","getDefaultLanguage","defaultLang","getBrowserLanguage","getBrowserLang","getCurrentLanguage","currentLang","getLoadedLanguages","langs","browserLang","match","use","getTranslation","interpolateParams","instant","getTranslationAsync","core$1","TranslateService","LocalStoreManager","syncKeys","initEvent","reservedKeys","sessionStorageTransferHandler","event","newValue","sessionStorage","localStorageSetItem","removeItem","loadSyncKeys","parse","syncKeysContains","sessionStorageSetItem","onInit","addToSessionStorageHelper","removeFromSessionStorageHelper","clearInstanceSessionStorage","addToSyncKeysHelper","removeFromSyncKeysHelper","initialiseStorageSyncListener","syncListenerInitialised","window","addEventListener","syncSessionStorage","deinitialiseStorageSyncListener","removeEventListener","clearAllStorage","clearAllSessionsStorage","clearLocalStorage","DBKEY_SYNC_KEYS","setItem","clear","saveSessionData","StorageManagerConstants","DBKEY_USER_DATA","testForInvalidKeys","removeFromSyncKeys","saveSyncedSessionData","addToSessionStorage","removeFromSessionStorage","moveDataToSessionStorage","getData","moveDataToSyncedSessionStorage","moveDataToPermanentStorage","getItem","sessionStorageGetItem","localStorageGetItem","isDateType","Date","getInitEvent","addToSyncKeysBackup","keyToRemove","removeFromSyncKeysBackup","Error","some","x","getSyncKeysFromStorage","addToSyncKeys","storedSyncKeys","push","index","indexOf","splice","complete","ThemeManager","themes","id","name","href","isDefault","background","color","isDark","theme","removeStyle","setStyle","getDefaultTheme","find","getLinkElementForKey","setAttribute","existingLinkElement","getExistingLinkElementByKey","document","head","removeChild","createLinkElementWithKey","querySelector","getClassNameForKey","linkEl","createElement","classList","add","appendChild","NgxAppkitServicesAlphaModule","providers","imports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpResponseBase } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\n\nimport { Utilities } from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    IAlertServiceContract,\n    AlertCommand,\n    AlertDialog,\n    DialogType,\n    MessageSeverity\n} from '@polpware/ngx-appkit-contracts-alpha';\n\n\n@Injectable()\nexport class AlertService implements IAlertServiceContract {\n    private messages = new Subject<AlertCommand>();\n    private dialogs = new Subject<AlertDialog>();\n\n    private loadingMessageTimeoutId: any;\n\n\n\n    showDialog(message: string);\n    showDialog(message: string, type: DialogType, okCallback: (val?: any) => any);\n    showDialog(message: string, type: DialogType, okCallback?: (val?: any) => any, cancelCallback?: () => any, okLabel?: string, cancelLabel?: string, defaultValue?: string);\n    showDialog(message: string, type?: DialogType, okCallback?: (val?: any) => any, cancelCallback?: () => any, okLabel?: string, cancelLabel?: string, defaultValue?: string) {\n\n        if (!type) {\n            type = DialogType.alert;\n        }\n\n        this.dialogs.next({ message, type, okCallback, cancelCallback, okLabel, cancelLabel, defaultValue });\n    }\n\n\n\n    showMessage(summary: string);\n    showMessage(summary: string, detail: string, severity: MessageSeverity);\n    showMessage(summaryAndDetails: string[], summaryAndDetailsSeparator: string, severity: MessageSeverity);\n    showMessage(response: HttpResponseBase, ignoreValue_useNull: string, severity: MessageSeverity);\n    showMessage(data: any, separatorOrDetail?: string, severity?: MessageSeverity) {\n\n        if (!severity) {\n            severity = MessageSeverity.default;\n        }\n\n        if (data instanceof HttpResponseBase) {\n            data = Utilities.getHttpResponseMessages(data);\n            separatorOrDetail = Utilities.captionAndMessageSeparator;\n        }\n\n        if (data instanceof Array) {\n            for (const message of data) {\n                const msgObject = Utilities.splitInTwo(message, separatorOrDetail);\n\n                this.showMessageHelper(msgObject.firstPart, msgObject.secondPart, severity, false);\n            }\n        } else {\n            this.showMessageHelper(data, separatorOrDetail, severity, false);\n        }\n    }\n\n\n    showStickyMessage(summary: string);\n    showStickyMessage(summary: string, detail: string, severity: MessageSeverity, error?: any);\n    showStickyMessage(summary: string, detail: string, severity: MessageSeverity, error?: any, onRemove?: () => any);\n    showStickyMessage(summaryAndDetails: string[], summaryAndDetailsSeparator: string, severity: MessageSeverity);\n    showStickyMessage(response: HttpResponseBase, ignoreValue_useNull: string, severity: MessageSeverity);\n    showStickyMessage(data: string | string[] | HttpResponseBase, separatorOrDetail?: string, severity?: MessageSeverity, error?: any, onRemove?: () => any) {\n\n        if (!severity) {\n            severity = MessageSeverity.default;\n        }\n\n        if (data instanceof HttpResponseBase) {\n            data = Utilities.getHttpResponseMessages(data);\n            separatorOrDetail = Utilities.captionAndMessageSeparator;\n        }\n\n\n        if (data instanceof Array) {\n            for (const message of data) {\n                const msgObject = Utilities.splitInTwo(message, separatorOrDetail);\n\n                this.showMessageHelper(msgObject.firstPart, msgObject.secondPart, severity, true);\n            }\n        } else {\n\n            if (error) {\n\n                const msg = `Severity: \"${MessageSeverity[severity]}\", Summary: \"${data}\", Detail: \"${separatorOrDetail}\", Error: \"${Utilities.safeStringify(error)}\"`;\n\n                switch (severity) {\n                    case MessageSeverity.default:\n                        this.logInfo(msg);\n                        break;\n                    case MessageSeverity.info:\n                        this.logInfo(msg);\n                        break;\n                    case MessageSeverity.success:\n                        this.logMessage(msg);\n                        break;\n                    case MessageSeverity.error:\n                        this.logError(msg);\n                        break;\n                    case MessageSeverity.warn:\n                        this.logWarning(msg);\n                        break;\n                    case MessageSeverity.wait:\n                        this.logTrace(msg);\n                        break;\n                }\n            }\n\n            this.showMessageHelper(data, separatorOrDetail, severity, true, onRemove);\n        }\n    }\n\n    private showMessageHelper(summary: string, detail: string, severity: MessageSeverity, isSticky: boolean, onRemove?: () => any) {\n\n        const alertCommand: AlertCommand = {\n            operation: isSticky ? 'add_sticky' : 'add',\n            message: { severity, summary, detail },\n            onRemove\n        };\n\n        this.messages.next(alertCommand);\n    }\n\n    resetStickyMessage() {\n        this.messages.next({ operation: 'clear' });\n    }\n\n    startLoadingMessage(message = 'Loading...', caption = '') {\n        clearTimeout(this.loadingMessageTimeoutId);\n\n        this.loadingMessageTimeoutId = setTimeout(() => {\n            this.showStickyMessage(caption, message, MessageSeverity.wait);\n        }, 1000);\n    }\n\n    stopLoadingMessage() {\n        clearTimeout(this.loadingMessageTimeoutId);\n        this.resetStickyMessage();\n    }\n\n\n\n    logDebug(msg) {\n        console.debug(msg);\n    }\n\n    logError(msg) {\n        console.error(msg);\n    }\n\n    logInfo(msg) {\n        console.info(msg);\n    }\n\n    logMessage(msg) {\n        console.log(msg);\n    }\n\n    logTrace(msg) {\n        console.trace(msg);\n    }\n\n    logWarning(msg) {\n        console.warn(msg);\n    }\n\n    getDialogEvent(): Observable<AlertDialog> {\n        return this.dialogs.asObservable();\n    }\n\n    getMessageEvent(): Observable<AlertCommand> {\n        return this.messages.asObservable();\n    }\n}\n\n","import { Injectable, Injector } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport {\n    ITranslationServiceContract,\n    IThemeManagerContract,\n    ILocalStoreManagerContract,\n    IConfigurationServiceContract,\n    ConfigurationServiceConstants,\n    TranslationServiceAbstractProvider,\n    LocalStoreManagerServiceAbstractProvider,\n    ThemeManagerAbstractProvider,\n    DBkeys,\n    Utilities,\n    environment\n} from '@polpware/ngx-appkit-contracts-alpha';\n\ninterface UserConfiguration {\n    language: string;\n    homeUrl: string;\n    themeId: number;\n    showDashboardStatistics: boolean;\n    showDashboardNotifications: boolean;\n    showDashboardTodo: boolean;\n    showDashboardBanner: boolean;\n}\n\n@Injectable()\nexport class ConfigurationService implements IConfigurationServiceContract {\n\n    private localStorage: ILocalStoreManagerContract;\n    private translationService: ITranslationServiceContract;\n    private themeManager: IThemeManagerContract;\n\n    constructor(localStoreManagerProvider: LocalStoreManagerServiceAbstractProvider,\n        translationServiceProvider: TranslationServiceAbstractProvider,\n        themeManagerProvider: ThemeManagerAbstractProvider) {\n\n        this.localStorage = localStoreManagerProvider.get();\n        this.translationService = translationServiceProvider.get();\n        this.themeManager = themeManagerProvider.get();\n\n        this.loadLocalChanges();\n    }\n\n    set language(value: string) {\n        this._language = value;\n        this.saveToLocalStore(value, DBkeys.LANGUAGE);\n        this.translationService.changeLanguage(value);\n    }\n    get language() {\n        return this._language || ConfigurationServiceConstants.defaultLanguage;\n    }\n\n\n    set themeId(value: number) {\n        value = +value;\n        this._themeId = value;\n        this.saveToLocalStore(value, DBkeys.THEME_ID);\n        this.themeManager.installTheme(this.themeManager.getThemeByID(value));\n    }\n    get themeId() {\n        return this._themeId || ConfigurationServiceConstants.defaultThemeId;\n    }\n\n\n    set homeUrl(value: string) {\n        this._homeUrl = value;\n        this.saveToLocalStore(value, DBkeys.HOME_URL);\n    }\n    get homeUrl() {\n        return this._homeUrl || ConfigurationServiceConstants.defaultHomeUrl;\n    }\n\n\n    set showDashboardStatistics(value: boolean) {\n        this._showDashboardStatistics = value;\n        this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_STATISTICS);\n    }\n    get showDashboardStatistics() {\n        return this._showDashboardStatistics != null ? this._showDashboardStatistics : ConfigurationServiceConstants.defaultShowDashboardStatistics;\n    }\n\n\n    set showDashboardNotifications(value: boolean) {\n        this._showDashboardNotifications = value;\n        this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_NOTIFICATIONS);\n    }\n    get showDashboardNotifications() {\n        return this._showDashboardNotifications != null ? this._showDashboardNotifications : ConfigurationServiceConstants.defaultShowDashboardNotifications;\n    }\n\n\n    set showDashboardTodo(value: boolean) {\n        this._showDashboardTodo = value;\n        this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_TODO);\n    }\n    get showDashboardTodo() {\n        return this._showDashboardTodo != null ? this._showDashboardTodo : ConfigurationServiceConstants.defaultShowDashboardTodo;\n    }\n\n\n    set showDashboardBanner(value: boolean) {\n        this._showDashboardBanner = value;\n        this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_BANNER);\n    }\n    get showDashboardBanner() {\n        return this._showDashboardBanner != null ? this._showDashboardBanner : ConfigurationServiceConstants.defaultShowDashboardBanner;\n    }\n\n    public baseUrl = environment.baseUrl || Utilities.baseUrl();\n    public tokenUrl = environment.tokenUrl || environment.baseUrl || Utilities.baseUrl();\n    public loginUrl = environment.loginUrl;\n    public fallbackBaseUrl = 'https://quickapp.ebenmonney.com';\n    // ***End of defaults***\n\n    private _language: string = null;\n    private _homeUrl: string = null;\n    private _themeId: number = null;\n    private _showDashboardStatistics: boolean = null;\n    private _showDashboardNotifications: boolean = null;\n    private _showDashboardTodo: boolean = null;\n    private _showDashboardBanner: boolean = null;\n\n    private onConfigurationImported: Subject<boolean> = new Subject<boolean>();\n    configurationImported$ = this.onConfigurationImported.asObservable();\n\n\n\n    private loadLocalChanges() {\n\n        if (this.localStorage.exists(DBkeys.LANGUAGE)) {\n            this._language = this.localStorage.getDataObject<string>(DBkeys.LANGUAGE, false);\n            this.translationService.changeLanguage(this._language);\n        } else {\n            this.resetLanguage();\n        }\n\n\n        if (this.localStorage.exists(DBkeys.THEME_ID)) {\n            this._themeId = this.localStorage.getDataObject<number>(DBkeys.THEME_ID, false);\n            this.themeManager.installTheme(this.themeManager.getThemeByID(this._themeId));\n        } else {\n            this.resetTheme();\n        }\n\n\n        if (this.localStorage.exists(DBkeys.HOME_URL)) {\n            this._homeUrl = this.localStorage.getDataObject<string>(DBkeys.HOME_URL, false);\n        }\n\n        if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_STATISTICS)) {\n            this._showDashboardStatistics = this.localStorage.getDataObject<boolean>(DBkeys.SHOW_DASHBOARD_STATISTICS, false);\n        }\n\n        if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS)) {\n            this._showDashboardNotifications = this.localStorage.getDataObject<boolean>(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS, false);\n        }\n\n        if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_TODO)) {\n            this._showDashboardTodo = this.localStorage.getDataObject<boolean>(DBkeys.SHOW_DASHBOARD_TODO, false);\n        }\n\n        if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_BANNER)) {\n            this._showDashboardBanner = this.localStorage.getDataObject<boolean>(DBkeys.SHOW_DASHBOARD_BANNER, false);\n        }\n    }\n\n\n    private saveToLocalStore(data: any, key: string) {\n        setTimeout(() => this.localStorage.savePermanentData(data, key));\n    }\n\n\n    public import(jsonValue: string) {\n\n        this.clearLocalChanges();\n\n        if (jsonValue) {\n            const importValue: UserConfiguration = Utilities.JsonTryParse(jsonValue);\n\n            if (importValue.language != null) {\n                this.language = importValue.language;\n            }\n\n            if (importValue.themeId != null) {\n                this.themeId = +importValue.themeId;\n            }\n\n            if (importValue.homeUrl != null) {\n                this.homeUrl = importValue.homeUrl;\n            }\n\n            if (importValue.showDashboardStatistics != null) {\n                this.showDashboardStatistics = importValue.showDashboardStatistics;\n            }\n\n            if (importValue.showDashboardNotifications != null) {\n                this.showDashboardNotifications = importValue.showDashboardNotifications;\n            }\n\n            if (importValue.showDashboardTodo != null) {\n                this.showDashboardTodo = importValue.showDashboardTodo;\n            }\n\n            if (importValue.showDashboardBanner != null) {\n                this.showDashboardBanner = importValue.showDashboardBanner;\n            }\n        }\n\n        this.onConfigurationImported.next();\n    }\n\n\n    public export(changesOnly = true): string {\n\n        const exportValue: UserConfiguration = {\n            language: changesOnly ? this._language : this.language,\n            themeId: changesOnly ? this._themeId : this.themeId,\n            homeUrl: changesOnly ? this._homeUrl : this.homeUrl,\n            showDashboardStatistics: changesOnly ? this._showDashboardStatistics : this.showDashboardStatistics,\n            showDashboardNotifications: changesOnly ? this._showDashboardNotifications : this.showDashboardNotifications,\n            showDashboardTodo: changesOnly ? this._showDashboardTodo : this.showDashboardTodo,\n            showDashboardBanner: changesOnly ? this._showDashboardBanner : this.showDashboardBanner\n        };\n\n        return JSON.stringify(exportValue);\n    }\n\n\n    public clearLocalChanges() {\n        this._language = null;\n        this._themeId = null;\n        this._homeUrl = null;\n        this._showDashboardStatistics = null;\n        this._showDashboardNotifications = null;\n        this._showDashboardTodo = null;\n        this._showDashboardBanner = null;\n\n        this.localStorage.deleteData(DBkeys.LANGUAGE);\n        this.localStorage.deleteData(DBkeys.THEME_ID);\n        this.localStorage.deleteData(DBkeys.HOME_URL);\n        this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_STATISTICS);\n        this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS);\n        this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_TODO);\n        this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_BANNER);\n\n        this.resetLanguage();\n        this.resetTheme();\n    }\n\n\n    private resetLanguage() {\n        const language = this.translationService.useBrowserLanguage();\n\n        if (language) {\n            this._language = language;\n        } else {\n            this._language = this.translationService.useDefaultLangage();\n        }\n    }\n\n    private resetTheme() {\n        this.themeManager.installTheme();\n        this._themeId = null;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService, TranslateLoader } from '@ngx-translate/core';\nimport { Observable, Subject, of } from 'rxjs';\nimport { ITranslationServiceContract } from '@polpware/ngx-appkit-contracts-alpha';\n\n\n@Injectable()\nexport class AppTranslationService implements ITranslationServiceContract {\n\n    private onLanguageChanged = new Subject<string>();\n    languageChanged$ = this.onLanguageChanged.asObservable();\n\n    constructor(private translate: TranslateService) {\n        this.addLanguages(['en', 'fr', 'de', 'pt', 'ar', 'ko']);\n        this.setDefaultLanguage('en');\n    }\n\n    addLanguages(lang: string[]) {\n        this.translate.addLangs(lang);\n    }\n\n    setDefaultLanguage(lang: string) {\n        this.translate.setDefaultLang(lang);\n    }\n\n    getDefaultLanguage() {\n        return this.translate.defaultLang;\n    }\n\n    getBrowserLanguage() {\n        return this.translate.getBrowserLang();\n    }\n\n    getCurrentLanguage() {\n        return this.translate.currentLang;\n    }\n\n    getLoadedLanguages() {\n        return this.translate.langs;\n    }\n\n    useBrowserLanguage(): string | void {\n        const browserLang = this.getBrowserLanguage();\n\n        if (browserLang.match(/en|fr|de|pt|ar|ko/)) {\n            this.changeLanguage(browserLang);\n            return browserLang;\n        }\n    }\n\n    useDefaultLangage() {\n        return this.changeLanguage(null);\n    }\n\n    changeLanguage(language: string) {\n        if (!language) {\n            language = this.getDefaultLanguage();\n        }\n\n        if (language != this.translate.currentLang) {\n            setTimeout(() => {\n                this.translate.use(language);\n                this.onLanguageChanged.next(language);\n            });\n        }\n\n        return language;\n    }\n\n\n    getTranslation(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return this.translate.instant(key, interpolateParams);\n    }\n\n\n    getTranslationAsync(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return this.translate.get(key, interpolateParams);\n    }\n\n}\n","\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { Utilities } from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    ILocalStoreManagerContract,\n    StorageManagerConstants\n} from '@polpware/ngx-appkit-contracts-alpha';\n\n@Injectable()\n/**\n* Provides a wrapper for accessing the web storage API and synchronizing session storage across tabs/windows.\n*/\nexport class LocalStoreManager implements ILocalStoreManagerContract {\n    private static syncListenerInitialised = false;\n\n    private static readonly DBKEY_SYNC_KEYS = 'sync_keys';\n    private syncKeys: string[] = [];\n    private initEvent = new Subject();\n\n    private reservedKeys: string[] =\n        [\n            'sync_keys',\n            'addToSyncKeys',\n            'removeFromSyncKeys',\n            'getSessionStorage',\n            'setSessionStorage',\n            'addToSessionStorage',\n            'removeFromSessionStorage',\n            'clearAllSessionsStorage'\n        ];\n\n\n    public initialiseStorageSyncListener() {\n        if (LocalStoreManager.syncListenerInitialised == true) {\n            return;\n        }\n\n        LocalStoreManager.syncListenerInitialised = true;\n        window.addEventListener('storage', this.sessionStorageTransferHandler, false);\n        this.syncSessionStorage();\n    }\n\n    public deinitialiseStorageSyncListener() {\n        window.removeEventListener('storage', this.sessionStorageTransferHandler, false);\n        LocalStoreManager.syncListenerInitialised = false;\n    }\n\n    public clearAllStorage() {\n        this.clearAllSessionsStorage();\n        this.clearLocalStorage();\n    }\n\n    public clearAllSessionsStorage() {\n        this.clearInstanceSessionStorage();\n        localStorage.removeItem(LocalStoreManager.DBKEY_SYNC_KEYS);\n\n        localStorage.setItem('clearAllSessionsStorage', '_dummy');\n        localStorage.removeItem('clearAllSessionsStorage');\n    }\n\n    public clearInstanceSessionStorage() {\n        sessionStorage.clear();\n        this.syncKeys = [];\n    }\n\n    public clearLocalStorage() {\n        localStorage.clear();\n    }\n\n    public saveSessionData(data: any, key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        this.removeFromSyncKeys(key);\n        localStorage.removeItem(key);\n        this.sessionStorageSetItem(key, data);\n    }\n\n    public saveSyncedSessionData(data: any, key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        localStorage.removeItem(key);\n        this.addToSessionStorage(data, key);\n    }\n\n    public savePermanentData(data: any, key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        this.removeFromSessionStorage(key);\n        this.localStorageSetItem(key, data);\n    }\n\n    public moveDataToSessionStorage(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        const data = this.getData(key);\n\n        if (data == null) {\n            return;\n        }\n\n        this.saveSessionData(data, key);\n    }\n\n    public moveDataToSyncedSessionStorage(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        const data = this.getData(key);\n\n        if (data == null) {\n            return;\n        }\n\n        this.saveSyncedSessionData(data, key);\n    }\n\n    public moveDataToPermanentStorage(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        const data = this.getData(key);\n\n        if (data == null) {\n            return;\n        }\n\n        this.savePermanentData(data, key);\n    }\n\n    public exists(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        let data = sessionStorage.getItem(key);\n\n        if (data == null) {\n            data = localStorage.getItem(key);\n        }\n\n        return data != null;\n    }\n\n    public getData(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        let data = this.sessionStorageGetItem(key);\n\n        if (data == null) {\n            data = this.localStorageGetItem(key);\n        }\n\n        return data;\n    }\n\n    public getDataObject<T>(key = StorageManagerConstants.DBKEY_USER_DATA, isDateType = false): T {\n        let data = this.getData(key);\n\n        if (data != null) {\n            if (isDateType) {\n                data = new Date(data);\n            }\n            return data as T;\n        } else {\n            return null;\n        }\n    }\n\n    public deleteData(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        this.removeFromSessionStorage(key);\n        localStorage.removeItem(key);\n    }\n\n    public getInitEvent(): Observable<{}> {\n        return this.initEvent.asObservable();\n    }\n\n    private sessionStorageTransferHandler = (event: StorageEvent) => {\n        if (!event.newValue) {\n            return;\n        }\n\n        if (event.key == 'getSessionStorage') {\n            if (sessionStorage.length) {\n                this.localStorageSetItem('setSessionStorage', sessionStorage);\n                localStorage.removeItem('setSessionStorage');\n            }\n        } else if (event.key == 'setSessionStorage') {\n\n            if (!this.syncKeys.length) {\n                this.loadSyncKeys();\n            }\n            const data = JSON.parse(event.newValue);\n            // console.info(\"Set => Key: Transfer setSessionStorage\" + \",  data: \" + JSON.stringify(data));\n\n            for (const key in data) {\n\n                if (this.syncKeysContains(key)) {\n                    this.sessionStorageSetItem(key, JSON.parse(data[key]));\n                }\n            }\n\n            this.onInit();\n        } else if (event.key == 'addToSessionStorage') {\n\n            const data = JSON.parse(event.newValue);\n\n            // console.warn(\"Set => Key: Transfer addToSessionStorage\" + \",  data: \" + JSON.stringify(data));\n\n            this.addToSessionStorageHelper(data.data, data.key);\n        } else if (event.key == 'removeFromSessionStorage') {\n\n            this.removeFromSessionStorageHelper(event.newValue);\n        } else if (event.key == 'clearAllSessionsStorage' && sessionStorage.length) {\n            this.clearInstanceSessionStorage();\n        } else if (event.key == 'addToSyncKeys') {\n            this.addToSyncKeysHelper(event.newValue);\n        } else if (event.key == 'removeFromSyncKeys') {\n            this.removeFromSyncKeysHelper(event.newValue);\n        }\n    }\n\n    private syncSessionStorage() {\n        localStorage.setItem('getSessionStorage', '_dummy');\n        localStorage.removeItem('getSessionStorage');\n    }\n\n    private addToSessionStorage(data: any, key: string) {\n        this.addToSessionStorageHelper(data, key);\n        this.addToSyncKeysBackup(key);\n\n        this.localStorageSetItem('addToSessionStorage', { key, data });\n        localStorage.removeItem('addToSessionStorage');\n    }\n\n    private addToSessionStorageHelper(data: any, key: string) {\n        this.addToSyncKeysHelper(key);\n        this.sessionStorageSetItem(key, data);\n    }\n\n    private removeFromSessionStorage(keyToRemove: string) {\n        this.removeFromSessionStorageHelper(keyToRemove);\n        this.removeFromSyncKeysBackup(keyToRemove);\n\n        localStorage.setItem('removeFromSessionStorage', keyToRemove);\n        localStorage.removeItem('removeFromSessionStorage');\n    }\n\n    private removeFromSessionStorageHelper(keyToRemove: string) {\n\n        sessionStorage.removeItem(keyToRemove);\n        this.removeFromSyncKeysHelper(keyToRemove);\n    }\n\n    private testForInvalidKeys(key: string) {\n        if (!key) {\n            throw new Error('key cannot be empty');\n        }\n\n        if (this.reservedKeys.some(x => x == key)) {\n            throw new Error(`The storage key \"${key}\" is reserved and cannot be used. Please use a different key`);\n        }\n    }\n\n    private syncKeysContains(key: string) {\n\n        return this.syncKeys.some(x => x == key);\n    }\n\n    private loadSyncKeys() {\n        if (this.syncKeys.length) {\n            return;\n        }\n\n        this.syncKeys = this.getSyncKeysFromStorage();\n    }\n\n    private getSyncKeysFromStorage(defaultValue: string[] = []): string[] {\n        const data = this.localStorageGetItem(LocalStoreManager.DBKEY_SYNC_KEYS);\n\n        if (data == null) {\n            return defaultValue;\n        } else {\n            return data as string[];\n        }\n    }\n\n    private addToSyncKeys(key: string) {\n        this.addToSyncKeysHelper(key);\n        this.addToSyncKeysBackup(key);\n\n        localStorage.setItem('addToSyncKeys', key);\n        localStorage.removeItem('addToSyncKeys');\n    }\n\n    private addToSyncKeysBackup(key: string) {\n        const storedSyncKeys = this.getSyncKeysFromStorage();\n\n        if (!storedSyncKeys.some(x => x == key)) {\n            storedSyncKeys.push(key);\n            this.localStorageSetItem(LocalStoreManager.DBKEY_SYNC_KEYS, storedSyncKeys);\n        }\n    }\n\n    private removeFromSyncKeysBackup(key: string) {\n        const storedSyncKeys = this.getSyncKeysFromStorage();\n\n        const index = storedSyncKeys.indexOf(key);\n\n        if (index > -1) {\n            storedSyncKeys.splice(index, 1);\n            this.localStorageSetItem(LocalStoreManager.DBKEY_SYNC_KEYS, storedSyncKeys);\n        }\n    }\n\n    private addToSyncKeysHelper(key: string) {\n        if (!this.syncKeysContains(key)) {\n            this.syncKeys.push(key);\n        }\n    }\n\n    private removeFromSyncKeys(key: string) {\n        this.removeFromSyncKeysHelper(key);\n        this.removeFromSyncKeysBackup(key);\n\n        localStorage.setItem('removeFromSyncKeys', key);\n        localStorage.removeItem('removeFromSyncKeys');\n    }\n\n    private removeFromSyncKeysHelper(key: string) {\n        const index = this.syncKeys.indexOf(key);\n\n        if (index > -1) {\n            this.syncKeys.splice(index, 1);\n        }\n    }\n\n    private localStorageSetItem(key: string, data: any) {\n        localStorage.setItem(key, JSON.stringify(data));\n    }\n\n    private sessionStorageSetItem(key: string, data: any) {\n        sessionStorage.setItem(key, JSON.stringify(data));\n    }\n\n    private localStorageGetItem(key: string) {\n        return Utilities.JsonTryParse(localStorage.getItem(key));\n    }\n\n    private sessionStorageGetItem(key: string) {\n        return Utilities.JsonTryParse(sessionStorage.getItem(key));\n    }\n\n    private onInit() {\n        setTimeout(() => {\n            this.initEvent.next();\n            this.initEvent.complete();\n        });\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { AppTheme, IThemeManagerContract } from '@polpware/ngx-appkit-contracts-alpha';\n\n@Injectable()\nexport class ThemeManager implements IThemeManagerContract {\n    themes: Array<AppTheme> = [\n        {\n            id: 1,\n            name: 'Default',\n            href: 'bootstrap.css',\n            isDefault: true,\n            background: '#007bff',\n            color: '#fff'\n        },\n        {\n            id: 2,\n            name: 'Cosmo',\n            href: 'cosmo.css',\n            background: '#2780E3',\n            color: '#373a3c'\n        },\n        {\n            id: 3,\n            name: 'Lumen',\n            href: 'lumen.css',\n            background: '#158CBA',\n            color: '#f0f0f0'\n        },\n        {\n            id: 4,\n            name: 'Cerulean',\n            href: 'cerulean.css',\n            background: '#2FA4E7',\n            color: '#e9ecef'\n        },\n        {\n            id: 5,\n            name: 'Minty',\n            href: 'minty.css',\n            background: '#78C2AD',\n            color: '#F3969A'\n        },\n        {\n            id: 6,\n            name: 'Sketchy',\n            href: 'sketchy.css',\n            background: '#333',\n            color: 'white'\n        },\n        {\n            id: 7,\n            name: 'Slate',\n            href: 'slate.css',\n            background: '#3A3F44',\n            color: '#7A8288',\n            isDark: true\n        },\n        {\n            id: 8,\n            name: 'Flatly',\n            href: 'flatly.css',\n            background: '#2C3E50',\n            color: '#18BC9C'\n        },\n        {\n            id: 9,\n            name: 'Pulse',\n            href: 'pulse.css',\n            background: '#593196',\n            color: '#A991D4'\n        },\n        {\n            id: 10,\n            name: 'Spacelab',\n            href: 'spacelab.css',\n            background: '#446E9B',\n            color: '#999'\n        },\n        {\n            id: 11,\n            name: 'United',\n            href: 'united.css',\n            background: '#E95420',\n            color: '#fff'\n        },\n        {\n            id: 12,\n            name: 'Journal',\n            href: 'journal.css',\n            background: '#EB6864',\n            color: '#aaa'\n        },\n        {\n            id: 13,\n            name: 'Superhero',\n            href: 'superhero.css',\n            background: '#DF691A',\n            color: '#2B3E50',\n            isDark: true\n        },\n        {\n            id: 14,\n            name: 'Solar',\n            href: 'solar.css',\n            background: '#B58900',\n            color: '#002B36',\n            isDark: true\n        }\n    ];\n\n    public installTheme(theme?: AppTheme) {\n        if (theme == null || theme.isDefault) {\n            this.removeStyle('theme');\n        } else {\n            this.setStyle('theme', `assets/themes/${theme.href}`);\n        }\n    }\n\n    public getDefaultTheme(): AppTheme {\n        return this.themes.find(theme => theme.isDefault);\n    }\n\n    public getThemeByID(id: number): AppTheme {\n        return this.themes.find(theme => theme.id === id);\n    }\n\n    private setStyle(key: string, href: string) {\n        this.getLinkElementForKey(key).setAttribute('href', href);\n    }\n\n    private removeStyle(key: string) {\n        const existingLinkElement = this.getExistingLinkElementByKey(key);\n        if (existingLinkElement) {\n            document.head.removeChild(existingLinkElement);\n        }\n    }\n\n    private getLinkElementForKey(key: string) {\n        return this.getExistingLinkElementByKey(key) || this.createLinkElementWithKey(key);\n    }\n\n    private getExistingLinkElementByKey(key: string) {\n        return document.head.querySelector(`link[rel=\"stylesheet\"].${this.getClassNameForKey(key)}`);\n    }\n\n    private createLinkElementWithKey(key: string) {\n        const linkEl = document.createElement('link');\n        linkEl.setAttribute('rel', 'stylesheet');\n        linkEl.classList.add(this.getClassNameForKey(key));\n        document.head.appendChild(linkEl);\n        return linkEl;\n    }\n\n    private getClassNameForKey(key: string) {\n        return `style-manager-${key}`;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { AlertService } from './services/alert.service';\nimport { ConfigurationService } from './services/configuration.service';\nimport { AppTranslationService } from './services/app-translation.service';\nimport { LocalStoreManager } from './services/local-store-manager.service';\nimport { ThemeManager } from './services/theme-manager';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n    ],\n    exports: [],\n    providers: [\n        AlertService,\n        ConfigurationService,\n        AppTranslationService,\n        LocalStoreManager,\n        ThemeManager\n    ]\n\n})\nexport class NgxAppkitServicesAlphaModule { }\n"]}