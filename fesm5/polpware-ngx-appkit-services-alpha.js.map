{"version":3,"file":"polpware-ngx-appkit-services-alpha.js","sources":["ng://@polpware/ngx-appkit-services-alpha/lib/services/alert.service.ts","ng://@polpware/ngx-appkit-services-alpha/lib/services/configuration.service.ts","ng://@polpware/ngx-appkit-services-alpha/lib/services/app-translation.service.ts","ng://@polpware/ngx-appkit-services-alpha/lib/services/local-store-manager.service.ts","ng://@polpware/ngx-appkit-services-alpha/lib/services/theme-manager.ts","ng://@polpware/ngx-appkit-services-alpha/lib/ngx-appkit-services-alpha.module.ts","ng://@polpware/ngx-appkit-services-alpha/public-api.ts","ng://@polpware/ngx-appkit-services-alpha/polpware-ngx-appkit-services-alpha.ts"],"sourcesContent":["import { HttpResponseBase } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AlertCommand, AlertDialog, DialogType, IAlertServiceContract, MessageSeverity, Utilities } from '@polpware/ngx-appkit-contracts-alpha';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlertService implements IAlertServiceContract {\n    private messages = new Subject<AlertCommand>();\n    private dialogs = new Subject<AlertDialog>();\n\n    private loadingMessageTimeoutId: any;\n\n\n\n    showDialog(message: string);\n    showDialog(message: string, type: DialogType, okCallback: (val?: any) => any);\n    showDialog(message: string, type: DialogType, okCallback?: (val?: any) => any, cancelCallback?: () => any, okLabel?: string, cancelLabel?: string, defaultValue?: string);\n    showDialog(message: string, type?: DialogType, okCallback?: (val?: any) => any, cancelCallback?: () => any, okLabel?: string, cancelLabel?: string, defaultValue?: string) {\n\n        if (!type) {\n            type = DialogType.alert;\n        }\n\n        this.dialogs.next({ message, type, okCallback, cancelCallback, okLabel, cancelLabel, defaultValue });\n    }\n\n\n\n    showMessage(summary: string);\n    showMessage(summary: string, detail: string, severity: MessageSeverity);\n    showMessage(summaryAndDetails: string[], summaryAndDetailsSeparator: string, severity: MessageSeverity);\n    showMessage(response: HttpResponseBase, ignoreValue_useNull: string, severity: MessageSeverity);\n    showMessage(data: any, separatorOrDetail?: string, severity?: MessageSeverity) {\n\n        if (!severity) {\n            severity = MessageSeverity.default;\n        }\n\n        if (data instanceof HttpResponseBase) {\n            data = Utilities.getHttpResponseMessages(data);\n            separatorOrDetail = Utilities.captionAndMessageSeparator;\n        }\n\n        if (data instanceof Array) {\n            for (const message of data) {\n                const msgObject = Utilities.splitInTwo(message, separatorOrDetail);\n\n                this.showMessageHelper(msgObject.firstPart, msgObject.secondPart, severity, false);\n            }\n        } else {\n            this.showMessageHelper(data, separatorOrDetail, severity, false);\n        }\n    }\n\n\n    showStickyMessage(summary: string);\n    showStickyMessage(summary: string, detail: string, severity: MessageSeverity, error?: any);\n    showStickyMessage(summary: string, detail: string, severity: MessageSeverity, error?: any, onRemove?: () => any);\n    showStickyMessage(summaryAndDetails: string[], summaryAndDetailsSeparator: string, severity: MessageSeverity);\n    showStickyMessage(response: HttpResponseBase, ignoreValue_useNull: string, severity: MessageSeverity);\n    showStickyMessage(data: string | string[] | HttpResponseBase, separatorOrDetail?: string, severity?: MessageSeverity, error?: any, onRemove?: () => any) {\n\n        if (!severity) {\n            severity = MessageSeverity.default;\n        }\n\n        if (data instanceof HttpResponseBase) {\n            data = Utilities.getHttpResponseMessages(data);\n            separatorOrDetail = Utilities.captionAndMessageSeparator;\n        }\n\n\n        if (data instanceof Array) {\n            for (const message of data) {\n                const msgObject = Utilities.splitInTwo(message, separatorOrDetail);\n\n                this.showMessageHelper(msgObject.firstPart, msgObject.secondPart, severity, true);\n            }\n        } else {\n\n            if (error) {\n\n                const msg = `Severity: \"${MessageSeverity[severity]}\", Summary: \"${data}\", Detail: \"${separatorOrDetail}\", Error: \"${Utilities.safeStringify(error)}\"`;\n\n                switch (severity) {\n                    case MessageSeverity.default:\n                        this.logInfo(msg);\n                        break;\n                    case MessageSeverity.info:\n                        this.logInfo(msg);\n                        break;\n                    case MessageSeverity.success:\n                        this.logMessage(msg);\n                        break;\n                    case MessageSeverity.error:\n                        this.logError(msg);\n                        break;\n                    case MessageSeverity.warn:\n                        this.logWarning(msg);\n                        break;\n                    case MessageSeverity.wait:\n                        this.logTrace(msg);\n                        break;\n                }\n            }\n\n            this.showMessageHelper(data, separatorOrDetail, severity, true, onRemove);\n        }\n    }\n\n    private showMessageHelper(summary: string, detail: string, severity: MessageSeverity, isSticky: boolean, onRemove?: () => any) {\n\n        const alertCommand: AlertCommand = {\n            operation: isSticky ? 'add_sticky' : 'add',\n            message: { severity, summary, detail },\n            onRemove\n        };\n\n        this.messages.next(alertCommand);\n    }\n\n    resetStickyMessage() {\n        this.messages.next({ operation: 'clear' });\n    }\n\n    startLoadingMessage(message = 'Loading...', caption = '') {\n        clearTimeout(this.loadingMessageTimeoutId);\n\n        this.loadingMessageTimeoutId = setTimeout(() => {\n            this.showStickyMessage(caption, message, MessageSeverity.wait);\n        }, 1000);\n    }\n\n    stopLoadingMessage() {\n        clearTimeout(this.loadingMessageTimeoutId);\n        this.resetStickyMessage();\n    }\n\n\n\n    logDebug(msg) {\n        console.debug(msg);\n    }\n\n    logError(msg) {\n        console.error(msg);\n    }\n\n    logInfo(msg) {\n        console.info(msg);\n    }\n\n    logMessage(msg) {\n        console.log(msg);\n    }\n\n    logTrace(msg) {\n        console.trace(msg);\n    }\n\n    logWarning(msg) {\n        console.warn(msg);\n    }\n\n    getDialogEvent(): Observable<AlertDialog> {\n        return this.dialogs.asObservable();\n    }\n\n    getMessageEvent(): Observable<AlertCommand> {\n        return this.messages.asObservable();\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { ConfigurationServiceConstants, DBkeys, environment, IConfigurationServiceContract, ILocalStoreManagerContract, IThemeManagerContract, ITranslationServiceContract, LocalStoreManagerServiceAbstractProvider, ThemeManagerAbstractProvider, TranslationServiceAbstractProvider, Utilities } from '@polpware/ngx-appkit-contracts-alpha';\nimport { Subject } from 'rxjs';\n\n\ninterface UserConfiguration {\n    language: string;\n    homeUrl: string;\n    themeId: number;\n    showDashboardStatistics: boolean;\n    showDashboardNotifications: boolean;\n    showDashboardTodo: boolean;\n    showDashboardBanner: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ConfigurationService implements IConfigurationServiceContract {\n\n    private localStorage: ILocalStoreManagerContract;\n    private translationService: ITranslationServiceContract;\n    private themeManager: IThemeManagerContract;\n\n    constructor(localStoreManagerProvider: LocalStoreManagerServiceAbstractProvider,\n        translationServiceProvider: TranslationServiceAbstractProvider,\n        themeManagerProvider: ThemeManagerAbstractProvider) {\n\n        this.localStorage = localStoreManagerProvider.get();\n        this.translationService = translationServiceProvider.get();\n        this.themeManager = themeManagerProvider.get();\n\n        this.loadLocalChanges();\n    }\n\n    set language(value: string) {\n        this._language = value;\n        this.saveToLocalStore(value, DBkeys.LANGUAGE);\n        this.translationService.changeLanguage(value);\n    }\n    get language() {\n        return this._language || ConfigurationServiceConstants.defaultLanguage;\n    }\n\n\n    set themeId(value: number) {\n        value = +value;\n        this._themeId = value;\n        this.saveToLocalStore(value, DBkeys.THEME_ID);\n        this.themeManager.installTheme(this.themeManager.getThemeByID(value));\n    }\n    get themeId() {\n        return this._themeId || ConfigurationServiceConstants.defaultThemeId;\n    }\n\n\n    set homeUrl(value: string) {\n        this._homeUrl = value;\n        this.saveToLocalStore(value, DBkeys.HOME_URL);\n    }\n    get homeUrl() {\n        return this._homeUrl || ConfigurationServiceConstants.defaultHomeUrl;\n    }\n\n\n    set showDashboardStatistics(value: boolean) {\n        this._showDashboardStatistics = value;\n        this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_STATISTICS);\n    }\n    get showDashboardStatistics() {\n        return this._showDashboardStatistics != null ? this._showDashboardStatistics : ConfigurationServiceConstants.defaultShowDashboardStatistics;\n    }\n\n\n    set showDashboardNotifications(value: boolean) {\n        this._showDashboardNotifications = value;\n        this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_NOTIFICATIONS);\n    }\n    get showDashboardNotifications() {\n        return this._showDashboardNotifications != null ? this._showDashboardNotifications : ConfigurationServiceConstants.defaultShowDashboardNotifications;\n    }\n\n\n    set showDashboardTodo(value: boolean) {\n        this._showDashboardTodo = value;\n        this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_TODO);\n    }\n    get showDashboardTodo() {\n        return this._showDashboardTodo != null ? this._showDashboardTodo : ConfigurationServiceConstants.defaultShowDashboardTodo;\n    }\n\n\n    set showDashboardBanner(value: boolean) {\n        this._showDashboardBanner = value;\n        this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_BANNER);\n    }\n    get showDashboardBanner() {\n        return this._showDashboardBanner != null ? this._showDashboardBanner : ConfigurationServiceConstants.defaultShowDashboardBanner;\n    }\n\n    public baseUrl = environment.baseUrl || Utilities.baseUrl();\n    public tokenUrl = environment.tokenUrl || environment.baseUrl || Utilities.baseUrl();\n    public loginUrl = environment.loginUrl;\n    public fallbackBaseUrl = '';\n    // ***End of defaults***\n\n    private _language: string = null;\n    private _homeUrl: string = null;\n    private _themeId: number = null;\n    private _showDashboardStatistics: boolean = null;\n    private _showDashboardNotifications: boolean = null;\n    private _showDashboardTodo: boolean = null;\n    private _showDashboardBanner: boolean = null;\n\n    private onConfigurationImported: Subject<boolean> = new Subject<boolean>();\n    configurationImported$ = this.onConfigurationImported.asObservable();\n\n\n\n    private loadLocalChanges() {\n\n        if (this.localStorage.exists(DBkeys.LANGUAGE)) {\n            this._language = this.localStorage.getDataObject<string>(DBkeys.LANGUAGE, false);\n            this.translationService.changeLanguage(this._language);\n        } else {\n            this.resetLanguage();\n        }\n\n\n        if (this.localStorage.exists(DBkeys.THEME_ID)) {\n            this._themeId = this.localStorage.getDataObject<number>(DBkeys.THEME_ID, false);\n            this.themeManager.installTheme(this.themeManager.getThemeByID(this._themeId));\n        } else {\n            this.resetTheme();\n        }\n\n\n        if (this.localStorage.exists(DBkeys.HOME_URL)) {\n            this._homeUrl = this.localStorage.getDataObject<string>(DBkeys.HOME_URL, false);\n        }\n\n        if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_STATISTICS)) {\n            this._showDashboardStatistics = this.localStorage.getDataObject<boolean>(DBkeys.SHOW_DASHBOARD_STATISTICS, false);\n        }\n\n        if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS)) {\n            this._showDashboardNotifications = this.localStorage.getDataObject<boolean>(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS, false);\n        }\n\n        if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_TODO)) {\n            this._showDashboardTodo = this.localStorage.getDataObject<boolean>(DBkeys.SHOW_DASHBOARD_TODO, false);\n        }\n\n        if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_BANNER)) {\n            this._showDashboardBanner = this.localStorage.getDataObject<boolean>(DBkeys.SHOW_DASHBOARD_BANNER, false);\n        }\n    }\n\n\n    private saveToLocalStore(data: any, key: string) {\n        setTimeout(() => this.localStorage.savePermanentData(data, key));\n    }\n\n\n    public import(jsonValue: string) {\n\n        this.clearLocalChanges();\n\n        if (jsonValue) {\n            const importValue: UserConfiguration = Utilities.JsonTryParse(jsonValue);\n\n            if (importValue.language != null) {\n                this.language = importValue.language;\n            }\n\n            if (importValue.themeId != null) {\n                this.themeId = +importValue.themeId;\n            }\n\n            if (importValue.homeUrl != null) {\n                this.homeUrl = importValue.homeUrl;\n            }\n\n            if (importValue.showDashboardStatistics != null) {\n                this.showDashboardStatistics = importValue.showDashboardStatistics;\n            }\n\n            if (importValue.showDashboardNotifications != null) {\n                this.showDashboardNotifications = importValue.showDashboardNotifications;\n            }\n\n            if (importValue.showDashboardTodo != null) {\n                this.showDashboardTodo = importValue.showDashboardTodo;\n            }\n\n            if (importValue.showDashboardBanner != null) {\n                this.showDashboardBanner = importValue.showDashboardBanner;\n            }\n        }\n\n        this.onConfigurationImported.next();\n    }\n\n\n    public export(changesOnly = true): string {\n\n        const exportValue: UserConfiguration = {\n            language: changesOnly ? this._language : this.language,\n            themeId: changesOnly ? this._themeId : this.themeId,\n            homeUrl: changesOnly ? this._homeUrl : this.homeUrl,\n            showDashboardStatistics: changesOnly ? this._showDashboardStatistics : this.showDashboardStatistics,\n            showDashboardNotifications: changesOnly ? this._showDashboardNotifications : this.showDashboardNotifications,\n            showDashboardTodo: changesOnly ? this._showDashboardTodo : this.showDashboardTodo,\n            showDashboardBanner: changesOnly ? this._showDashboardBanner : this.showDashboardBanner\n        };\n\n        return JSON.stringify(exportValue);\n    }\n\n\n    public clearLocalChanges() {\n        this._language = null;\n        this._themeId = null;\n        this._homeUrl = null;\n        this._showDashboardStatistics = null;\n        this._showDashboardNotifications = null;\n        this._showDashboardTodo = null;\n        this._showDashboardBanner = null;\n\n        this.localStorage.deleteData(DBkeys.LANGUAGE);\n        this.localStorage.deleteData(DBkeys.THEME_ID);\n        this.localStorage.deleteData(DBkeys.HOME_URL);\n        this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_STATISTICS);\n        this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS);\n        this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_TODO);\n        this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_BANNER);\n\n        this.resetLanguage();\n        this.resetTheme();\n    }\n\n\n    private resetLanguage() {\n        const language = this.translationService.useBrowserLanguage();\n\n        if (language) {\n            this._language = language;\n        } else {\n            this._language = this.translationService.useDefaultLangage();\n        }\n    }\n\n    private resetTheme() {\n        this.themeManager.installTheme();\n        this._themeId = null;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ITranslationServiceContract } from '@polpware/ngx-appkit-contracts-alpha';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppTranslationService implements ITranslationServiceContract {\n\n    private onLanguageChanged = new Subject<string>();\n    languageChanged$ = this.onLanguageChanged.asObservable();\n\n    constructor(private translate: TranslateService) {\n        this.addLanguages(['en', 'fr', 'de', 'pt', 'ar', 'ko']);\n        this.setDefaultLanguage('en');\n    }\n\n    addLanguages(lang: string[]) {\n        this.translate.addLangs(lang);\n    }\n\n    setDefaultLanguage(lang: string) {\n        this.translate.setDefaultLang(lang);\n    }\n\n    getDefaultLanguage() {\n        return this.translate.defaultLang;\n    }\n\n    getBrowserLanguage() {\n        return this.translate.getBrowserLang();\n    }\n\n    getCurrentLanguage() {\n        return this.translate.currentLang;\n    }\n\n    getLoadedLanguages() {\n        return this.translate.langs;\n    }\n\n    useBrowserLanguage(): string | void {\n        const browserLang = this.getBrowserLanguage();\n\n        if (browserLang.match(/en|fr|de|pt|ar|ko/)) {\n            this.changeLanguage(browserLang);\n            return browserLang;\n        }\n    }\n\n    useDefaultLangage() {\n        return this.changeLanguage(null);\n    }\n\n    changeLanguage(language: string) {\n        if (!language) {\n            language = this.getDefaultLanguage();\n        }\n\n        if (language != this.translate.currentLang) {\n            setTimeout(() => {\n                this.translate.use(language);\n                this.onLanguageChanged.next(language);\n            });\n        }\n\n        return language;\n    }\n\n\n    getTranslation(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return this.translate.instant(key, interpolateParams);\n    }\n\n\n    getTranslationAsync(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return this.translate.get(key, interpolateParams);\n    }\n\n}\n","\nimport { Injectable } from '@angular/core';\nimport { ILocalStoreManagerContract, StorageManagerConstants, Utilities } from '@polpware/ngx-appkit-contracts-alpha';\nimport { Observable, Subject } from 'rxjs';\n\n\n/**\n* Provides a wrapper for accessing the web storage API and synchronizing session storage across tabs/windows.\n*/\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalStoreManager implements ILocalStoreManagerContract {\n    private static syncListenerInitialised = false;\n\n    private static readonly DBKEY_SYNC_KEYS = 'sync_keys';\n    private syncKeys: string[] = [];\n    private initEvent = new Subject();\n\n    private reservedKeys: string[] =\n        [\n            'sync_keys',\n            'addToSyncKeys',\n            'removeFromSyncKeys',\n            'getSessionStorage',\n            'setSessionStorage',\n            'addToSessionStorage',\n            'removeFromSessionStorage',\n            'clearAllSessionsStorage'\n        ];\n\n\n    public initialiseStorageSyncListener() {\n        if (LocalStoreManager.syncListenerInitialised == true) {\n            return;\n        }\n\n        LocalStoreManager.syncListenerInitialised = true;\n        window.addEventListener('storage', this.sessionStorageTransferHandler, false);\n        this.syncSessionStorage();\n    }\n\n    public deinitialiseStorageSyncListener() {\n        window.removeEventListener('storage', this.sessionStorageTransferHandler, false);\n        LocalStoreManager.syncListenerInitialised = false;\n    }\n\n    public clearAllStorage() {\n        this.clearAllSessionsStorage();\n        this.clearLocalStorage();\n    }\n\n    public clearAllSessionsStorage() {\n        this.clearInstanceSessionStorage();\n        localStorage.removeItem(LocalStoreManager.DBKEY_SYNC_KEYS);\n\n        localStorage.setItem('clearAllSessionsStorage', '_dummy');\n        localStorage.removeItem('clearAllSessionsStorage');\n    }\n\n    public clearInstanceSessionStorage() {\n        sessionStorage.clear();\n        this.syncKeys = [];\n    }\n\n    public clearLocalStorage() {\n        localStorage.clear();\n    }\n\n    public saveSessionData(data: any, key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        this.removeFromSyncKeys(key);\n        localStorage.removeItem(key);\n        this.sessionStorageSetItem(key, data);\n    }\n\n    public saveSyncedSessionData(data: any, key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        localStorage.removeItem(key);\n        this.addToSessionStorage(data, key);\n    }\n\n    public savePermanentData(data: any, key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        this.removeFromSessionStorage(key);\n        this.localStorageSetItem(key, data);\n    }\n\n    public moveDataToSessionStorage(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        const data = this.getData(key);\n\n        if (data == null) {\n            return;\n        }\n\n        this.saveSessionData(data, key);\n    }\n\n    public moveDataToSyncedSessionStorage(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        const data = this.getData(key);\n\n        if (data == null) {\n            return;\n        }\n\n        this.saveSyncedSessionData(data, key);\n    }\n\n    public moveDataToPermanentStorage(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        const data = this.getData(key);\n\n        if (data == null) {\n            return;\n        }\n\n        this.savePermanentData(data, key);\n    }\n\n    public exists(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        let data = sessionStorage.getItem(key);\n\n        if (data == null) {\n            data = localStorage.getItem(key);\n        }\n\n        return data != null;\n    }\n\n    public getData(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        let data = this.sessionStorageGetItem(key);\n\n        if (data == null) {\n            data = this.localStorageGetItem(key);\n        }\n\n        return data;\n    }\n\n    public getDataObject<T>(key = StorageManagerConstants.DBKEY_USER_DATA, isDateType = false): T {\n        let data = this.getData(key);\n\n        if (data != null) {\n            if (isDateType) {\n                data = new Date(data);\n            }\n            return data as T;\n        } else {\n            return null;\n        }\n    }\n\n    public deleteData(key = StorageManagerConstants.DBKEY_USER_DATA) {\n        this.testForInvalidKeys(key);\n\n        this.removeFromSessionStorage(key);\n        localStorage.removeItem(key);\n    }\n\n    public getInitEvent(): Observable<{}> {\n        return this.initEvent.asObservable();\n    }\n\n    private sessionStorageTransferHandler = (event: StorageEvent) => {\n        if (!event.newValue) {\n            return;\n        }\n\n        if (event.key == 'getSessionStorage') {\n            if (sessionStorage.length) {\n                this.localStorageSetItem('setSessionStorage', sessionStorage);\n                localStorage.removeItem('setSessionStorage');\n            }\n        } else if (event.key == 'setSessionStorage') {\n\n            if (!this.syncKeys.length) {\n                this.loadSyncKeys();\n            }\n            const data = JSON.parse(event.newValue);\n            // console.info(\"Set => Key: Transfer setSessionStorage\" + \",  data: \" + JSON.stringify(data));\n\n            for (const key in data) {\n\n                if (this.syncKeysContains(key)) {\n                    this.sessionStorageSetItem(key, JSON.parse(data[key]));\n                }\n            }\n\n            this.onInit();\n        } else if (event.key == 'addToSessionStorage') {\n\n            const data = JSON.parse(event.newValue);\n\n            // console.warn(\"Set => Key: Transfer addToSessionStorage\" + \",  data: \" + JSON.stringify(data));\n\n            this.addToSessionStorageHelper(data.data, data.key);\n        } else if (event.key == 'removeFromSessionStorage') {\n\n            this.removeFromSessionStorageHelper(event.newValue);\n        } else if (event.key == 'clearAllSessionsStorage' && sessionStorage.length) {\n            this.clearInstanceSessionStorage();\n        } else if (event.key == 'addToSyncKeys') {\n            this.addToSyncKeysHelper(event.newValue);\n        } else if (event.key == 'removeFromSyncKeys') {\n            this.removeFromSyncKeysHelper(event.newValue);\n        }\n    }\n\n    private syncSessionStorage() {\n        localStorage.setItem('getSessionStorage', '_dummy');\n        localStorage.removeItem('getSessionStorage');\n    }\n\n    private addToSessionStorage(data: any, key: string) {\n        this.addToSessionStorageHelper(data, key);\n        this.addToSyncKeysBackup(key);\n\n        this.localStorageSetItem('addToSessionStorage', { key, data });\n        localStorage.removeItem('addToSessionStorage');\n    }\n\n    private addToSessionStorageHelper(data: any, key: string) {\n        this.addToSyncKeysHelper(key);\n        this.sessionStorageSetItem(key, data);\n    }\n\n    private removeFromSessionStorage(keyToRemove: string) {\n        this.removeFromSessionStorageHelper(keyToRemove);\n        this.removeFromSyncKeysBackup(keyToRemove);\n\n        localStorage.setItem('removeFromSessionStorage', keyToRemove);\n        localStorage.removeItem('removeFromSessionStorage');\n    }\n\n    private removeFromSessionStorageHelper(keyToRemove: string) {\n\n        sessionStorage.removeItem(keyToRemove);\n        this.removeFromSyncKeysHelper(keyToRemove);\n    }\n\n    private testForInvalidKeys(key: string) {\n        if (!key) {\n            throw new Error('key cannot be empty');\n        }\n\n        if (this.reservedKeys.some(x => x == key)) {\n            throw new Error(`The storage key \"${key}\" is reserved and cannot be used. Please use a different key`);\n        }\n    }\n\n    private syncKeysContains(key: string) {\n\n        return this.syncKeys.some(x => x == key);\n    }\n\n    private loadSyncKeys() {\n        if (this.syncKeys.length) {\n            return;\n        }\n\n        this.syncKeys = this.getSyncKeysFromStorage();\n    }\n\n    private getSyncKeysFromStorage(defaultValue: string[] = []): string[] {\n        const data = this.localStorageGetItem(LocalStoreManager.DBKEY_SYNC_KEYS);\n\n        if (data == null) {\n            return defaultValue;\n        } else {\n            return data as string[];\n        }\n    }\n\n    private addToSyncKeys(key: string) {\n        this.addToSyncKeysHelper(key);\n        this.addToSyncKeysBackup(key);\n\n        localStorage.setItem('addToSyncKeys', key);\n        localStorage.removeItem('addToSyncKeys');\n    }\n\n    private addToSyncKeysBackup(key: string) {\n        const storedSyncKeys = this.getSyncKeysFromStorage();\n\n        if (!storedSyncKeys.some(x => x == key)) {\n            storedSyncKeys.push(key);\n            this.localStorageSetItem(LocalStoreManager.DBKEY_SYNC_KEYS, storedSyncKeys);\n        }\n    }\n\n    private removeFromSyncKeysBackup(key: string) {\n        const storedSyncKeys = this.getSyncKeysFromStorage();\n\n        const index = storedSyncKeys.indexOf(key);\n\n        if (index > -1) {\n            storedSyncKeys.splice(index, 1);\n            this.localStorageSetItem(LocalStoreManager.DBKEY_SYNC_KEYS, storedSyncKeys);\n        }\n    }\n\n    private addToSyncKeysHelper(key: string) {\n        if (!this.syncKeysContains(key)) {\n            this.syncKeys.push(key);\n        }\n    }\n\n    private removeFromSyncKeys(key: string) {\n        this.removeFromSyncKeysHelper(key);\n        this.removeFromSyncKeysBackup(key);\n\n        localStorage.setItem('removeFromSyncKeys', key);\n        localStorage.removeItem('removeFromSyncKeys');\n    }\n\n    private removeFromSyncKeysHelper(key: string) {\n        const index = this.syncKeys.indexOf(key);\n\n        if (index > -1) {\n            this.syncKeys.splice(index, 1);\n        }\n    }\n\n    private localStorageSetItem(key: string, data: any) {\n        localStorage.setItem(key, JSON.stringify(data));\n    }\n\n    private sessionStorageSetItem(key: string, data: any) {\n        sessionStorage.setItem(key, JSON.stringify(data));\n    }\n\n    private localStorageGetItem(key: string) {\n        return Utilities.JsonTryParse(localStorage.getItem(key));\n    }\n\n    private sessionStorageGetItem(key: string) {\n        return Utilities.JsonTryParse(sessionStorage.getItem(key));\n    }\n\n    private onInit() {\n        setTimeout(() => {\n            this.initEvent.next();\n            this.initEvent.complete();\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AppTheme, IThemeManagerContract } from '@polpware/ngx-appkit-contracts-alpha';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThemeManager implements IThemeManagerContract {\n    themes: Array<AppTheme> = [\n        {\n            id: 1,\n            name: 'Default',\n            href: 'bootstrap.css',\n            isDefault: true,\n            background: '#007bff',\n            color: '#fff'\n        },\n        {\n            id: 2,\n            name: 'Cosmo',\n            href: 'cosmo.css',\n            background: '#2780E3',\n            color: '#373a3c'\n        },\n        {\n            id: 3,\n            name: 'Lumen',\n            href: 'lumen.css',\n            background: '#158CBA',\n            color: '#f0f0f0'\n        },\n        {\n            id: 4,\n            name: 'Cerulean',\n            href: 'cerulean.css',\n            background: '#2FA4E7',\n            color: '#e9ecef'\n        },\n        {\n            id: 5,\n            name: 'Minty',\n            href: 'minty.css',\n            background: '#78C2AD',\n            color: '#F3969A'\n        },\n        {\n            id: 6,\n            name: 'Sketchy',\n            href: 'sketchy.css',\n            background: '#333',\n            color: 'white'\n        },\n        {\n            id: 7,\n            name: 'Slate',\n            href: 'slate.css',\n            background: '#3A3F44',\n            color: '#7A8288',\n            isDark: true\n        },\n        {\n            id: 8,\n            name: 'Flatly',\n            href: 'flatly.css',\n            background: '#2C3E50',\n            color: '#18BC9C'\n        },\n        {\n            id: 9,\n            name: 'Pulse',\n            href: 'pulse.css',\n            background: '#593196',\n            color: '#A991D4'\n        },\n        {\n            id: 10,\n            name: 'Spacelab',\n            href: 'spacelab.css',\n            background: '#446E9B',\n            color: '#999'\n        },\n        {\n            id: 11,\n            name: 'United',\n            href: 'united.css',\n            background: '#E95420',\n            color: '#fff'\n        },\n        {\n            id: 12,\n            name: 'Journal',\n            href: 'journal.css',\n            background: '#EB6864',\n            color: '#aaa'\n        },\n        {\n            id: 13,\n            name: 'Superhero',\n            href: 'superhero.css',\n            background: '#DF691A',\n            color: '#2B3E50',\n            isDark: true\n        },\n        {\n            id: 14,\n            name: 'Solar',\n            href: 'solar.css',\n            background: '#B58900',\n            color: '#002B36',\n            isDark: true\n        }\n    ];\n\n    public installTheme(theme?: AppTheme) {\n        if (theme == null || theme.isDefault) {\n            this.removeStyle('theme');\n        } else {\n            this.setStyle('theme', `assets/themes/${theme.href}`);\n        }\n    }\n\n    public getDefaultTheme(): AppTheme {\n        return this.themes.find(theme => theme.isDefault);\n    }\n\n    public getThemeByID(id: number): AppTheme {\n        return this.themes.find(theme => theme.id === id);\n    }\n\n    private setStyle(key: string, href: string) {\n        this.getLinkElementForKey(key).setAttribute('href', href);\n    }\n\n    private removeStyle(key: string) {\n        const existingLinkElement = this.getExistingLinkElementByKey(key);\n        if (existingLinkElement) {\n            document.head.removeChild(existingLinkElement);\n        }\n    }\n\n    private getLinkElementForKey(key: string) {\n        return this.getExistingLinkElementByKey(key) || this.createLinkElementWithKey(key);\n    }\n\n    private getExistingLinkElementByKey(key: string) {\n        return document.head.querySelector(`link[rel=\"stylesheet\"].${this.getClassNameForKey(key)}`);\n    }\n\n    private createLinkElementWithKey(key: string) {\n        const linkEl = document.createElement('link');\n        linkEl.setAttribute('rel', 'stylesheet');\n        linkEl.classList.add(this.getClassNameForKey(key));\n        document.head.appendChild(linkEl);\n        return linkEl;\n    }\n\n    private getClassNameForKey(key: string) {\n        return `style-manager-${key}`;\n    }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n    declarations: [],\n    imports: [\n    ],\n    exports: [],\n    providers: [\n    ]\n\n})\nexport class NgxAppkitServicesAlphaModule { }\n","/*\n * Public API Surface of ngx-appkit-services-alpha\n */\n\nexport * from './lib/services/alert.service';\nexport * from './lib/services/configuration.service';\nexport * from './lib/services/app-translation.service';\nexport * from './lib/services/local-store-manager.service';\nexport * from './lib/services/theme-manager';\n\nexport * from './lib/ngx-appkit-services-alpha.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}